'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _PortalConnector = require('./PortalConnector');

var _PortalConnector2 = _interopRequireDefault(_PortalConnector);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var portal = function portal(targetName) {
  var updaterName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'updateChild';
  var idName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'id';
  return function (PortalComponent) {
    var Portal = function (_Component) {
      _inherits(Portal, _Component);

      function Portal(props) {
        _classCallCheck(this, Portal);

        var _this = _possibleConstructorReturn(this, (Portal.__proto__ || Object.getPrototypeOf(Portal)).call(this, props));

        _this.state = { portalId: null };
        return _this;
      }

      _createClass(Portal, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
          var id = this.context.portalConnector.addChild(targetName, null);
          this.setState({ portalId: id });
        }
      }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
          this.unmounted = true;
          this.context.portalConnector.removeChild(this.state.portalId);
        }
      }, {
        key: 'render',
        value: function render() {
          var _this2 = this,
              _extends2;

          if (!this.state.portalId) return null;
          var props = _extends({}, this.props, (_extends2 = {}, _defineProperty(_extends2, updaterName, function (child) {
            if (_this2.unmounted) return;
            _this2.context.portalConnector.updateChild(_this2.state.portalId, child);
          }), _defineProperty(_extends2, idName, this.state.portalId), _extends2));
          return _react2.default.createElement(PortalComponent, props);
        }
      }]);

      return Portal;
    }(_react.Component);

    Portal.contextTypes = {
      portalConnector: _propTypes2.default.instanceOf(_PortalConnector2.default).isRequired
    };
    return Portal;
  };
};

exports.default = portal;