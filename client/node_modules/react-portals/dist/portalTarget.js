'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _compose = require('recompose/compose');

var _compose2 = _interopRequireDefault(_compose);

var _pure = require('recompose/pure');

var _pure2 = _interopRequireDefault(_pure);

var _getContext = require('recompose/getContext');

var _getContext2 = _interopRequireDefault(_getContext);

var _setDisplayName = require('recompose/setDisplayName');

var _setDisplayName2 = _interopRequireDefault(_setDisplayName);

var _wrapDisplayName = require('recompose/wrapDisplayName');

var _wrapDisplayName2 = _interopRequireDefault(_wrapDisplayName);

var _PortalConnector = require('./PortalConnector');

var _PortalConnector2 = _interopRequireDefault(_PortalConnector);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var portalTarget = function portalTarget(name) {
  return function (PortalTargetComponent) {
    var PortalTarget = function (_Component) {
      _inherits(PortalTarget, _Component);

      function PortalTarget(props) {
        _classCallCheck(this, PortalTarget);

        var _this = _possibleConstructorReturn(this, (PortalTarget.__proto__ || Object.getPrototypeOf(PortalTarget)).call(this, props));

        _this.state = { children: [] };
        return _this;
      }

      _createClass(PortalTarget, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
          this.props.portalConnector.registerTarget(name, this);
        }
      }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
          this.props.portalConnector.removeTarget(name);
        }
      }, {
        key: 'render',
        value: function render() {
          return _react2.default.createElement(
            PortalTargetComponent,
            null,
            this.state.children
          );
        }
      }, {
        key: 'updateChildren',
        value: function updateChildren(children) {
          this.setState({ children: children });
        }
      }]);

      return PortalTarget;
    }(_react.Component);

    PortalTarget.propTypes = {
      portalConnector: _propTypes2.default.instanceOf(_PortalConnector2.default)
    };

    return (0, _compose2.default)((0, _setDisplayName2.default)((0, _wrapDisplayName2.default)(_react.Component, 'portalTarget')), _pure2.default, (0, _getContext2.default)({ portalConnector: _propTypes2.default.instanceOf(_PortalConnector2.default) }))(PortalTarget);
  };
};

exports.default = portalTarget;