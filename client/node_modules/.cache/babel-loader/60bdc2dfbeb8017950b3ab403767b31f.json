{"ast":null,"code":"import _defineProperty from \"/home/user/work/project/calendarReact/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as Constants from \"../../constants\";\nexport default function renameKeys(obj) {\n  console.log(Object.keys(obj).length, Constants.KEYSMAP);\n  let newArrAllEvents = [];\n\n  for (let i = 0; i < obj.length; i++) {\n    Object.keys(obj[i]).reduce((acc, key) => _objectSpread({}, acc, {}, {\n      [Constants.KEYSMAP[key] || key]: obj[i][key]\n    }), {});\n    newArrAllEvents.push(obj[i]);\n    return newArrAllEvents;\n  }\n\n  console.log(newArrAllEvents);\n  return newArrAllEvents;\n}\n;","map":{"version":3,"sources":["/home/user/work/project/calendarReact/client/src/components/auxiliary/renameKeys.js"],"names":["Constants","renameKeys","obj","console","log","Object","keys","length","KEYSMAP","newArrAllEvents","i","reduce","acc","key","push"],"mappings":";;;;;;AAAA,OAAO,KAAKA,SAAZ,MAA2B,iBAA3B;AAGA,eAAe,SAASC,UAAT,CAAqBC,GAArB,EAA0B;AAErCC,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,IAAP,CAAYJ,GAAZ,EAAiBK,MAA7B,EAAoCP,SAAS,CAACQ,OAA9C;AAEA,MAAIC,eAAe,GAAG,EAAtB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,GAAG,CAACK,MAAxB,EAAgCG,CAAC,EAAjC,EAAqC;AAC7BL,IAAAA,MAAM,CAACC,IAAP,CAAYJ,GAAG,CAACQ,CAAD,CAAf,EAAoBC,MAApB,CACA,CAACC,GAAD,EAAMC,GAAN,uBACOD,GADP,MAEO;AAAE,OAACZ,SAAS,CAACQ,OAAV,CAAkBK,GAAlB,KAA0BA,GAA3B,GAAiCX,GAAG,CAACQ,CAAD,CAAH,CAAOG,GAAP;AAAnC,KAFP,CADA,EAKA,EALA;AAOAJ,IAAAA,eAAe,CAACK,IAAhB,CAAqBZ,GAAG,CAACQ,CAAD,CAAxB;AACA,WAAOD,eAAP;AACP;;AACDN,EAAAA,OAAO,CAACC,GAAR,CAAYK,eAAZ;AAEA,SAAOA,eAAP;AAEH;AAAA","sourcesContent":["import * as Constants from \"../../constants\";\n\n\nexport default function renameKeys (obj) {\n\n    console.log(Object.keys(obj).length,Constants.KEYSMAP )\n\n    let newArrAllEvents = [];\n\n    for (let i = 0; i < obj.length; i++) {\n            Object.keys(obj[i]).reduce(\n            (acc, key) => ({\n                ...acc,\n                ...{ [Constants.KEYSMAP[key] || key]: obj[i][key] }\n            }),\n            {}\n        );\n            newArrAllEvents.push(obj[i]);\n            return newArrAllEvents\n    }\n    console.log(newArrAllEvents )\n\n    return newArrAllEvents\n\n};\n\n"]},"metadata":{},"sourceType":"module"}