{"ast":null,"code":"import React from 'react';\nimport PropTypes from \"prop-types\";\n\nconst CreatOneDay = props => {\n  let isThereAnEvent = 0;\n  console.log(props.allEvent); // props.allEvent.map((item) => {\n  //     if ((item.monthAndDate === `${props.newArr[props.number]} ${props.month}`) && props.year === item.year) {\n  //         return isThereAnEvent += 1;\n  //     }\n  // });\n  // let isThisDayToday = false;\n  // if ((props.todayDate.year === props.year) &&\n  //     (props.todayDate.monthName === props.month) &&\n  //     (props.todayDate.today === props.newArr[props.number])) {\n  //     isThisDayToday = true;\n  // }\n  // let classNameTd = '';\n  // if (isThisDayToday === true && isThereAnEvent > 0) {\n  //     classNameTd = 'tdStyleYear red today'\n  // } else if (isThereAnEvent) {\n  //     classNameTd = 'tdStyleYear red'\n  // } else if (isThisDayToday) {\n  //     classNameTd = 'tdStyleYear today'\n  // } else {\n  //     classNameTd = 'tdStyleYear'\n  // }\n  //\n  // return (\n  //     props.newArr[props.number] ?\n  //         (<td key={'key'+ props.item}\n  //             id={`${props.newArr[props.number]} ${props.month}`}\n  //             className={classNameTd}\n  //             data-tooltip={isThereAnEvent ? `${isThereAnEvent} events in this day` : null}\n  //         >\n  //             {props.newArr[props.number]}\n  //         </td>) : (<td key={'key'+ props.item} className=\"tdStyle invisible\" id=\"0\"/>)\n  // )\n};\n\nCreatOneDay.propTypes = {\n  newArr: PropTypes.array.isRequired,\n  month: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  allEvent: PropTypes.array.isRequired,\n  year: PropTypes.number.isRequired,\n  todayDate: PropTypes.object.isRequired\n};\nCreatOneDay.defaultProps = {};\nexport { CreatOneDay };","map":{"version":3,"sources":["/home/user/work/project/calendarReact/client/src/components/createNewView/year/day/index.js"],"names":["React","PropTypes","CreatOneDay","props","isThereAnEvent","console","log","allEvent","propTypes","newArr","array","isRequired","month","string","onClick","func","year","number","todayDate","object","defaultProps"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3B,MAAIC,cAAc,GAAG,CAArB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,QAAlB,EAF2B,CAG3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAnCD;;AAqCAL,WAAW,CAACM,SAAZ,GAAwB;AACpBC,EAAAA,MAAM,EAAER,SAAS,CAACS,KAAV,CAAgBC,UADJ;AAEpBC,EAAAA,KAAK,EAAEX,SAAS,CAACY,MAAV,CAAiBF,UAFJ;AAGpBG,EAAAA,OAAO,EAAEb,SAAS,CAACc,IAAV,CAAeJ,UAHJ;AAIpBJ,EAAAA,QAAQ,EAAEN,SAAS,CAACS,KAAV,CAAgBC,UAJN;AAKpBK,EAAAA,IAAI,EAAEf,SAAS,CAACgB,MAAV,CAAiBN,UALH;AAMpBO,EAAAA,SAAS,EAAEjB,SAAS,CAACkB,MAAV,CAAiBR;AANR,CAAxB;AASAT,WAAW,CAACkB,YAAZ,GAA2B,EAA3B;AAIA,SAAQlB,WAAR","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\n\nconst CreatOneDay = (props) => {\n    let isThereAnEvent = 0;\n    console.log(props.allEvent);\n    // props.allEvent.map((item) => {\n    //     if ((item.monthAndDate === `${props.newArr[props.number]} ${props.month}`) && props.year === item.year) {\n    //         return isThereAnEvent += 1;\n    //     }\n    // });\n    // let isThisDayToday = false;\n    // if ((props.todayDate.year === props.year) &&\n    //     (props.todayDate.monthName === props.month) &&\n    //     (props.todayDate.today === props.newArr[props.number])) {\n    //     isThisDayToday = true;\n    // }\n    // let classNameTd = '';\n    // if (isThisDayToday === true && isThereAnEvent > 0) {\n    //     classNameTd = 'tdStyleYear red today'\n    // } else if (isThereAnEvent) {\n    //     classNameTd = 'tdStyleYear red'\n    // } else if (isThisDayToday) {\n    //     classNameTd = 'tdStyleYear today'\n    // } else {\n    //     classNameTd = 'tdStyleYear'\n    // }\n    //\n    // return (\n    //     props.newArr[props.number] ?\n    //         (<td key={'key'+ props.item}\n    //             id={`${props.newArr[props.number]} ${props.month}`}\n    //             className={classNameTd}\n    //             data-tooltip={isThereAnEvent ? `${isThereAnEvent} events in this day` : null}\n    //         >\n    //             {props.newArr[props.number]}\n    //         </td>) : (<td key={'key'+ props.item} className=\"tdStyle invisible\" id=\"0\"/>)\n    // )\n};\n\nCreatOneDay.propTypes = {\n    newArr: PropTypes.array.isRequired,\n    month: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n    allEvent: PropTypes.array.isRequired,\n    year: PropTypes.number.isRequired,\n    todayDate: PropTypes.object.isRequired,\n};\n\nCreatOneDay.defaultProps = {};\n\n\n\nexport {CreatOneDay};"]},"metadata":{},"sourceType":"module"}