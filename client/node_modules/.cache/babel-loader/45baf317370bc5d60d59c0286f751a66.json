{"ast":null,"code":"var _jsxFileName = \"/home/user/work/project/calendarReact/client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { CreatYear } from './components/createNewView/year';\nimport { CreateMonth } from \"./components/createNewView/month\";\nimport Header from './components/Header';\nimport * as Constants from './constants';\nimport numberOfDaysInAMonthInYear from './components/auxiliary/numberOfDaydInAMonth';\nimport validationNewEvent from './components/auxiliary/validationNewEvent';\nimport findActiveEvent from './components/auxiliary/findActiveEvent';\nimport renameKeys from './components/auxiliary/renameKeys';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleModal = e => {\n      const newStatus = !this.state.showModal;\n\n      if (newStatus) {\n        this.setState({\n          showModal: newStatus,\n          activeDate: e.target.id\n        });\n      } else {\n        this.setState({\n          showModal: newStatus,\n          activeDate: '',\n          showModalEditEvent: false,\n          afterEditEvent: Constants.EMPTYOBJECT,\n          activeEvent: Constants.EMPTYOBJECT\n        });\n      }\n    };\n\n    this.state = {\n      todayDate: {\n        year: Constants.YEAR,\n        monthName: Constants.MONTH,\n        today: Constants.DAY\n      },\n      year: Constants.YEAR,\n      monthName: Constants.MONTH,\n      today: Constants.DAY,\n      allMonth: Constants.ALLMONTH,\n      allEvent: '',\n      activeWindow: 'Year',\n      activeDate: '',\n      activeEvent: Constants.EMPTYOBJECT,\n      afterEditEvent: Constants.EMPTYOBJECT,\n      firstInputValue: '',\n      secondInputValue: '',\n      title: '',\n      text: '',\n      editFirstInputValue: '',\n      editSecondInputValue: '',\n      editTitle: '',\n      editText: '',\n      showModal: false,\n      showModalEditEvent: false\n    };\n    this.editEvent = this.editEvent.bind(this);\n    this.deleteEvent = this.deleteEvent.bind(this);\n    this.addNewEvent = this.addNewEvent.bind(this);\n    this.newValueInput = this.newValueInput.bind(this);\n    this.saveEditEvent = this.saveEditEvent.bind(this);\n    this.cancelEditEvent = this.cancelEditEvent.bind(this);\n    this.changeYearInState = this.changeYearInState.bind(this);\n    this.clickForViewMonth = this.clickForViewMonth.bind(this);\n    this.clickForChangeView = this.clickForChangeView.bind(this);\n    this.clickForChangeYear = this.clickForChangeYear.bind(this);\n    this.changeYearInStateToOne = this.changeYearInStateToOne.bind(this);\n    this.changeMonthInStateToOne = this.changeMonthInStateToOne.bind(this);\n  }\n\n  UNSAFE_componentWillMount() {\n    fetch('http://localhost:3002/allEvents').then(response => response.json()).then(result => {\n      const newAllEvents = renameKeys(result);\n      console.log(newAllEvents);\n      this.setState({\n        allEvent: newAllEvents\n      });\n    }).catch(e => console.log(e));\n  }\n\n  whatRenderNowHeader() {\n    return React.createElement(Header, {\n      year: this.state.year,\n      month: this.state.monthName,\n      allMonth: this.state.allMonth,\n      activeWindow: this.state.activeWindow,\n      onClick: this.changeYearInState,\n      clickForViewMonth: this.clickForViewMonth,\n      clickForChangeView: this.clickForChangeView,\n      changeYearInStateToOne: this.changeYearInStateToOne,\n      changeMonthInStateToOne: this.changeMonthInStateToOne,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    });\n  }\n\n  whatRenderNowMain() {\n    if (this.state.activeWindow === 'Year') {\n      return React.createElement(CreatYear, {\n        todayDate: this.state.todayDate,\n        year: this.state.year,\n        newArr: this.state.allMonth,\n        allEvent: this.state.allEvent,\n        clickForChangeView: this.clickForChangeView,\n        toggleModal: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(CreateMonth, {\n        todayDate: this.state.todayDate,\n        month: this.state.monthName,\n        year: this.state.year,\n        allEvent: this.state.allEvent,\n        activeDate: this.state.activeDate,\n        afterEditEvent: this.state.afterEditEvent,\n        showModalEditEvent: this.state.showModalEditEvent,\n        newArr: this.state.allMonth[this.state.monthName],\n        editFirstInputValue: this.state.editFirstInputValue,\n        editSecondInputValue: this.state.editSecondInputValue,\n        editTitle: this.state.editTitle,\n        editText: this.state.editText,\n        c: true,\n        showModal: this.state.showModal,\n        editEvent: this.editEvent,\n        toggleModal: this.toggleModal,\n        addNewEvent: this.addNewEvent,\n        deleteEvent: this.deleteEvent,\n        saveEditEvent: this.saveEditEvent,\n        newValueInput: this.newValueInput,\n        cancelEditEvent: this.cancelEditEvent,\n        clickForViewMonth: this.clickForViewMonth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      });\n    }\n  }\n\n  newValueInput(e) {\n    const _e$target = e.target,\n          id = _e$target.id,\n          value = _e$target.value;\n    let newId = '';\n\n    if (id.indexOf('.') > -1) {\n      // cut 'afterEditEvent.' if this edit event\n      newId = id.slice(15);\n    } else {\n      // if new event\n      newId = id;\n    }\n\n    this.setState({\n      [newId]: value\n    });\n  }\n\n  addNewEvent() {\n    const newEvent = validationNewEvent(this.state.firstInputValue, this.state.secondInputValue, this.state.year, this.state.activeDate, this.state.allEvent, this.state.title, this.state.text);\n\n    if (Object.keys(newEvent).length) {\n      let allEvent = this.state.allEvent;\n      allEvent.push(newEvent);\n      this.setState({\n        allEvent: allEvent,\n        showModal: !this.state.showModal,\n        showModalEditEvent: false,\n        activeEvent: Constants.EMPTYOBJECT,\n        afterEditEvent: Constants.EMPTYOBJECT,\n        firstInputValue: '',\n        secondInputValue: '',\n        title: '',\n        text: '',\n        activeDate: ''\n      });\n    }\n  }\n\n  editEvent(id) {\n    const newAllEvent = findActiveEvent(this.state.allEvent, id, true)[0];\n    const from = newAllEvent.from,\n          to = newAllEvent.to,\n          title = newAllEvent.title,\n          text = newAllEvent.text;\n    this.setState({\n      showModalEditEvent: true,\n      afterEditEvent: newAllEvent,\n      activeEvent: newAllEvent,\n      editFirstInputValue: from,\n      editSecondInputValue: to,\n      editTitle: title,\n      editText: text\n    });\n  }\n\n  cancelEditEvent() {\n    this.setState({\n      showModalEditEvent: false,\n      activeEvent: Constants.EMPTYOBJECT,\n      afterEditEvent: Constants.EMPTYOBJECT,\n      editFirstInputValue: '',\n      editSecondInputValue: '',\n      editTitle: '',\n      editText: ''\n    });\n  }\n\n  saveEditEvent() {\n    const afterEditEvent = this.state.afterEditEvent;\n    const allEvent = this.state.allEvent;\n    let newAllEvent = allEvent.filter(item => {\n      return item._id !== afterEditEvent._id;\n    });\n    const newEvent = validationNewEvent(this.state.editFirstInputValue, this.state.editSecondInputValue, afterEditEvent.year, this.state.activeDate, newAllEvent, this.state.editTitle, this.state.editText);\n\n    if (Object.keys(newEvent).length) {\n      newAllEvent.push(newEvent);\n      this.setState({\n        allEvent: newAllEvent,\n        activeEvent: Constants.EMPTYOBJECT,\n        showModalEditEvent: false,\n        afterEditEvent: Constants.EMPTYOBJECT,\n        editFirstInputValue: '',\n        editSecondInputValue: '',\n        editTitle: '',\n        editText: ''\n      });\n    }\n  }\n\n  deleteEvent(e) {\n    const newAllEvent = findActiveEvent(this.state.allEvent, e.target.id, false);\n    this.setState({\n      allEvent: newAllEvent,\n      showModalEditEvent: false,\n      afterEditEvent: Constants.EMPTYOBJECT,\n      activeEvent: Constants.EMPTYOBJECT\n    });\n  }\n\n  clickForChangeView(data, month) {\n    if (month) {\n      this.setState({\n        activeWindow: data,\n        monthName: month\n      });\n    } else {\n      this.setState({\n        activeWindow: data\n      });\n    }\n  }\n\n  clickForViewMonth(month) {\n    this.setState({\n      monthName: month\n    });\n  }\n\n  clickForChangeYear(e) {\n    if (e.which === 13) {\n      let yearValue = e.target.value;\n      const newAllMonth = numberOfDaysInAMonthInYear(yearValue);\n      this.setState({\n        allMonth: newAllMonth,\n        year: yearValue\n      });\n    }\n  }\n\n  changeYearInStateToOne(sign) {\n    let newYear = this.state.year;\n    sign === 'plus' ? ++newYear : --newYear;\n    let newAllMonth = numberOfDaysInAMonthInYear(newYear);\n    this.setState({\n      year: newYear,\n      allMonth: newAllMonth\n    });\n  }\n\n  changeMonthInStateToOne(sign) {\n    let thisYear = this.state.year;\n    let numMonth = new Date('1 ' + this.state.monthName + ' ' + thisYear);\n    numMonth = numMonth.getMonth();\n\n    if (sign === 'plus') {\n      if (numMonth === 11) {\n        ++thisYear;\n        numMonth = 0;\n      } else {\n        ++numMonth;\n      }\n    } else if (sign === 'minus') {\n      if (numMonth === 0) {\n        --thisYear;\n        numMonth = 11;\n      } else {\n        --numMonth;\n      }\n    }\n\n    let newMonth = new Date(thisYear, numMonth, 1).toLocaleString('en-US', {\n      month: 'long'\n    });\n    this.setState({\n      monthName: newMonth,\n      year: thisYear\n    });\n  }\n\n  changeYearInState(year) {\n    if (this.state.activeWindow === 'Year') {\n      numberOfDaysInAMonthInYear(year);\n      this.setState({\n        year: parseInt(year)\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.whatRenderNowHeader(), this.whatRenderNowMain(), React.createElement(\"footer\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"https://github.com/EABych/calendarReact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, \"\\xA9 calendarReact 2019\")));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/user/work/project/calendarReact/client/src/App.js"],"names":["React","CreatYear","CreateMonth","Header","Constants","numberOfDaysInAMonthInYear","validationNewEvent","findActiveEvent","renameKeys","Home","Component","constructor","props","toggleModal","e","newStatus","state","showModal","setState","activeDate","target","id","showModalEditEvent","afterEditEvent","EMPTYOBJECT","activeEvent","todayDate","year","YEAR","monthName","MONTH","today","DAY","allMonth","ALLMONTH","allEvent","activeWindow","firstInputValue","secondInputValue","title","text","editFirstInputValue","editSecondInputValue","editTitle","editText","editEvent","bind","deleteEvent","addNewEvent","newValueInput","saveEditEvent","cancelEditEvent","changeYearInState","clickForViewMonth","clickForChangeView","clickForChangeYear","changeYearInStateToOne","changeMonthInStateToOne","UNSAFE_componentWillMount","fetch","then","response","json","result","newAllEvents","console","log","catch","whatRenderNowHeader","whatRenderNowMain","value","newId","indexOf","slice","newEvent","Object","keys","length","push","newAllEvent","from","to","filter","item","_id","data","month","which","yearValue","newAllMonth","sign","newYear","thisYear","numMonth","Date","getMonth","newMonth","toLocaleString","parseInt","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {CreatYear} from './components/createNewView/year';\nimport {CreateMonth} from \"./components/createNewView/month\";\nimport Header from './components/Header';\nimport * as Constants from './constants';\nimport numberOfDaysInAMonthInYear from './components/auxiliary/numberOfDaydInAMonth';\nimport validationNewEvent from './components/auxiliary/validationNewEvent';\nimport findActiveEvent from './components/auxiliary/findActiveEvent';\nimport renameKeys from './components/auxiliary/renameKeys'\n\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            todayDate: {\n                year: Constants.YEAR,\n                monthName: Constants.MONTH,\n                today: Constants.DAY\n            },\n            year: Constants.YEAR,\n            monthName: Constants.MONTH,\n            today: Constants.DAY,\n            allMonth: Constants.ALLMONTH,\n            allEvent: '',\n\n            activeWindow: 'Year',\n            activeDate: '',\n            activeEvent: Constants.EMPTYOBJECT,\n            afterEditEvent: Constants.EMPTYOBJECT,\n\n\n            firstInputValue: '',\n            secondInputValue: '',\n            title: '',\n            text: '',\n\n            editFirstInputValue: '',\n            editSecondInputValue: '',\n            editTitle: '',\n            editText: '',\n\n            showModal: false,\n            showModalEditEvent: false,\n        };\n\n        this.editEvent = this.editEvent.bind(this);\n        this.deleteEvent = this.deleteEvent.bind(this);\n        this.addNewEvent = this.addNewEvent.bind(this);\n        this.newValueInput = this.newValueInput.bind(this);\n        this.saveEditEvent = this.saveEditEvent.bind(this);\n        this.cancelEditEvent = this.cancelEditEvent.bind(this);\n        this.changeYearInState = this.changeYearInState.bind(this);\n        this.clickForViewMonth = this.clickForViewMonth.bind(this);\n        this.clickForChangeView = this.clickForChangeView.bind(this);\n        this.clickForChangeYear = this.clickForChangeYear.bind(this);\n        this.changeYearInStateToOne = this.changeYearInStateToOne.bind(this);\n        this.changeMonthInStateToOne = this.changeMonthInStateToOne.bind(this);\n    }\n\n    UNSAFE_componentWillMount(){\n        fetch('http://localhost:3002/allEvents')\n            .then(response => response.json())\n            .then(result => {\n                const newAllEvents = renameKeys(result);\n                console.log(newAllEvents);\n\n                this.setState({allEvent: newAllEvents});\n            })\n            .catch(e => console.log(e));\n    };\n\n    whatRenderNowHeader() {\n        return <Header year={this.state.year}\n                       month={this.state.monthName}\n                       allMonth={this.state.allMonth}\n                       activeWindow={this.state.activeWindow}\n                       onClick={this.changeYearInState}\n                       clickForViewMonth={this.clickForViewMonth}\n                       clickForChangeView={this.clickForChangeView}\n                       changeYearInStateToOne={this.changeYearInStateToOne}\n                       changeMonthInStateToOne={this.changeMonthInStateToOne}\n        />\n    }\n\n    whatRenderNowMain() {\n\n\n        if (this.state.activeWindow === 'Year') {\n            return <CreatYear todayDate={this.state.todayDate}\n                              year={this.state.year}\n                              newArr={this.state.allMonth}\n                              allEvent={this.state.allEvent}\n                              clickForChangeView={this.clickForChangeView}\n                              toggleModal={this.toggleModal}\n            />\n        } else {\n            return <CreateMonth todayDate={this.state.todayDate}\n                                month={this.state.monthName}\n                                year={this.state.year}\n                                allEvent={this.state.allEvent}\n                                activeDate={this.state.activeDate}\n                                afterEditEvent={this.state.afterEditEvent}\n                                showModalEditEvent={this.state.showModalEditEvent}\n                                newArr={this.state.allMonth[this.state.monthName]}\n                                editFirstInputValue={this.state.editFirstInputValue}\n                                editSecondInputValue={this.state.editSecondInputValue}\n                                editTitle={this.state.editTitle}\n                                editText={this.state.editText}\nc\n\n                                showModal={this.state.showModal}\n                                editEvent={this.editEvent}\n                                toggleModal={this.toggleModal}\n                                addNewEvent={this.addNewEvent}\n                                deleteEvent={this.deleteEvent}\n                                saveEditEvent={this.saveEditEvent}\n                                newValueInput={this.newValueInput}\n                                cancelEditEvent={this.cancelEditEvent}\n                                clickForViewMonth={this.clickForViewMonth}\n            />\n        }\n    }\n\n\n    toggleModal = (e) => {\n        const newStatus = !this.state.showModal;\n        if (newStatus) {\n            this.setState({\n                showModal: newStatus,\n                activeDate: e.target.id,\n            })\n        } else {\n            this.setState({\n                showModal: newStatus,\n                activeDate: '',\n                showModalEditEvent: false,\n                afterEditEvent: Constants.EMPTYOBJECT,\n                activeEvent: Constants.EMPTYOBJECT,\n            })\n        }\n    };\n\n    newValueInput(e) {\n        const {id, value} = e.target;\n        let newId = '';\n        if (id.indexOf('.') > -1) {\n            // cut 'afterEditEvent.' if this edit event\n            newId = id.slice(15)\n        } else {\n            // if new event\n            newId = id\n        }\n        this.setState({[newId]: value});\n    }\n\n    addNewEvent() {\n        const newEvent = validationNewEvent(this.state.firstInputValue,\n            this.state.secondInputValue,\n            this.state.year,\n            this.state.activeDate,\n            this.state.allEvent,\n            this.state.title,\n            this.state.text);\n\n        if (Object.keys(newEvent).length) {\n            let allEvent = this.state.allEvent;\n            allEvent.push(newEvent);\n\n            this.setState({\n                allEvent: allEvent,\n                showModal: !this.state.showModal,\n                showModalEditEvent: false,\n                activeEvent: Constants.EMPTYOBJECT,\n                afterEditEvent: Constants.EMPTYOBJECT,\n\n                firstInputValue: '',\n                secondInputValue: '',\n                title: '',\n                text: '',\n                activeDate: ''\n            })\n        }\n    }\n\n    editEvent(id) {\n        const newAllEvent = findActiveEvent(this.state.allEvent, id, true)[0];\n        const {from, to, title, text} = newAllEvent;\n        this.setState({\n            showModalEditEvent: true,\n            afterEditEvent: newAllEvent,\n            activeEvent: newAllEvent,\n            editFirstInputValue: from,\n            editSecondInputValue: to,\n            editTitle: title,\n            editText: text,\n        });\n    }\n\n    cancelEditEvent() {\n        this.setState({\n            showModalEditEvent: false,\n            activeEvent: Constants.EMPTYOBJECT,\n            afterEditEvent: Constants.EMPTYOBJECT,\n\n            editFirstInputValue: '',\n            editSecondInputValue: '',\n            editTitle: '',\n            editText: '',\n        })\n    }\n\n    saveEditEvent() {\n        const afterEditEvent = this.state.afterEditEvent;\n        const allEvent = this.state.allEvent;\n        let newAllEvent = allEvent.filter((item) => {\n                return (item._id !== afterEditEvent._id)\n            }\n        );\n        const newEvent = validationNewEvent(\n            this.state.editFirstInputValue,\n            this.state.editSecondInputValue,\n            afterEditEvent.year,\n            this.state.activeDate,\n            newAllEvent,\n            this.state.editTitle,\n            this.state.editText);\n\n        if (Object.keys(newEvent).length) {\n            newAllEvent.push(newEvent);\n\n            this.setState({\n                allEvent: newAllEvent,\n                activeEvent: Constants.EMPTYOBJECT,\n                showModalEditEvent: false,\n                afterEditEvent: Constants.EMPTYOBJECT,\n\n                editFirstInputValue: '',\n                editSecondInputValue: '',\n                editTitle: '',\n                editText: '',\n            })\n        }\n    }\n\n    deleteEvent(e) {\n        const newAllEvent = findActiveEvent(this.state.allEvent, e.target.id, false);\n        this.setState({\n            allEvent: newAllEvent,\n            showModalEditEvent: false,\n            afterEditEvent: Constants.EMPTYOBJECT,\n            activeEvent: Constants.EMPTYOBJECT,\n        });\n    }\n\n    clickForChangeView(data, month) {\n        if (month) {\n            this.setState({activeWindow: data, monthName: month})\n        } else {\n            this.setState({activeWindow: data})\n        }\n    }\n\n    clickForViewMonth(month) {\n        this.setState({monthName: month});\n    }\n\n    clickForChangeYear(e) {\n        if (e.which === 13) {\n            let yearValue = e.target.value;\n            const newAllMonth = numberOfDaysInAMonthInYear(yearValue);\n            this.setState({allMonth: newAllMonth, year: yearValue});\n        }\n    }\n\n    changeYearInStateToOne(sign) {\n        let newYear = this.state.year;\n        sign === 'plus' ? ++newYear : --newYear;\n        let newAllMonth = numberOfDaysInAMonthInYear(newYear);\n        this.setState({year: newYear, allMonth: newAllMonth});\n    }\n\n    changeMonthInStateToOne(sign) {\n        let thisYear = this.state.year;\n        let numMonth = new Date('1 ' + this.state.monthName + ' ' + thisYear);\n        numMonth = numMonth.getMonth();\n        if (sign === 'plus') {\n            if (numMonth === 11) {\n                ++thisYear;\n                numMonth = 0;\n            } else {\n                ++numMonth;\n            }\n        } else if (sign === 'minus') {\n            if (numMonth === 0) {\n                --thisYear;\n                numMonth = 11;\n            } else {\n                --numMonth;\n            }\n        }\n        let newMonth = new Date(thisYear, numMonth, 1).toLocaleString('en-US', {month: 'long'});\n        this.setState({monthName: newMonth, year: thisYear})\n    }\n\n    changeYearInState(year) {\n        if (this.state.activeWindow === 'Year') {\n            numberOfDaysInAMonthInYear(year);\n            this.setState({year: parseInt(year)});\n        }\n    }\n\n    render() {\n        return (\n            <>\n                {this.whatRenderNowHeader()}\n                {this.whatRenderNowMain()}\n                <footer>\n                    <a href='https://github.com/EABych/calendarReact'>© calendarReact 2019</a>\n                </footer>\n            </>\n        );\n    }\n}\n\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}