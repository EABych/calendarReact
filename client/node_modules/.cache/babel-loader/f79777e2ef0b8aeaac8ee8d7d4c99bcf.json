{"ast":null,"code":"var _jsxFileName = \"/home/user/work/project/calendarReact/client/src/components/createNewView/year/day/index.js\";\nimport React from 'react';\nimport PropTypes from \"prop-types\";\n\nconst CreatOneDay = props => {\n  console.log('props', props);\n  let isThereAnEvent = 0;\n  props.allEvent.map(item => {\n    if (item.monthAndDate === \"\".concat(props.newArr[props.number], \" \").concat(props.month) && props.year === item.year) {\n      return isThereAnEvent += 1;\n    }\n  });\n  let isThisDayToday = false;\n\n  if (props.todayDate.year === props.year && props.todayDate.monthName === props.month && props.todayDate.today === props.newArr[props.number]) {\n    isThisDayToday = true;\n  }\n\n  let classNameTd = '';\n\n  if (isThisDayToday === true && isThereAnEvent > 0) {\n    classNameTd = 'tdStyleYear red today';\n  } else if (isThereAnEvent) {\n    classNameTd = 'tdStyleYear red';\n  } else if (isThisDayToday) {\n    classNameTd = 'tdStyleYear today';\n  } else {\n    classNameTd = 'tdStyleYear';\n  }\n\n  return props.newArr[props.number] ? React.createElement(\"td\", {\n    key: 'key' + props.item,\n    id: \"\".concat(props.newArr[props.number], \" \").concat(props.month),\n    className: classNameTd,\n    \"data-tooltip\": isThereAnEvent ? \"\".concat(isThereAnEvent, \" events in this day\") : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, props.newArr[props.number]) : React.createElement(\"td\", {\n    key: 'key' + props.item,\n    className: \"tdStyle invisible\",\n    id: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  });\n};\n\nCreatOneDay.propTypes = {\n  newArr: PropTypes.array.isRequired,\n  month: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  allEvent: PropTypes.array.isRequired,\n  year: PropTypes.number.isRequired,\n  todayDate: PropTypes.object.isRequired\n};\nCreatOneDay.defaultProps = {};\nexport { CreatOneDay };","map":{"version":3,"sources":["/home/user/work/project/calendarReact/client/src/components/createNewView/year/day/index.js"],"names":["React","PropTypes","CreatOneDay","props","console","log","isThereAnEvent","allEvent","map","item","monthAndDate","newArr","number","month","year","isThisDayToday","todayDate","monthName","today","classNameTd","propTypes","array","isRequired","string","onClick","func","object","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAE/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,KAApB;AAEe,MAAIG,cAAc,GAAG,CAArB;AACXH,EAAAA,KAAK,CAACI,QAAN,CAAeC,GAAf,CAAoBC,IAAD,IAAU;AACzB,QAAKA,IAAI,CAACC,YAAL,eAAyBP,KAAK,CAACQ,MAAN,CAAaR,KAAK,CAACS,MAAnB,CAAzB,cAAuDT,KAAK,CAACU,KAA7D,CAAD,IAA0EV,KAAK,CAACW,IAAN,KAAeL,IAAI,CAACK,IAAlG,EAAwG;AACpG,aAAOR,cAAc,IAAI,CAAzB;AACH;AACJ,GAJD;AAKA,MAAIS,cAAc,GAAG,KAArB;;AACA,MAAKZ,KAAK,CAACa,SAAN,CAAgBF,IAAhB,KAAyBX,KAAK,CAACW,IAAhC,IACCX,KAAK,CAACa,SAAN,CAAgBC,SAAhB,KAA8Bd,KAAK,CAACU,KADrC,IAECV,KAAK,CAACa,SAAN,CAAgBE,KAAhB,KAA0Bf,KAAK,CAACQ,MAAN,CAAaR,KAAK,CAACS,MAAnB,CAF/B,EAE4D;AACxDG,IAAAA,cAAc,GAAG,IAAjB;AACH;;AACD,MAAII,WAAW,GAAG,EAAlB;;AACA,MAAIJ,cAAc,KAAK,IAAnB,IAA2BT,cAAc,GAAG,CAAhD,EAAmD;AAC/Ca,IAAAA,WAAW,GAAG,uBAAd;AACH,GAFD,MAEO,IAAIb,cAAJ,EAAoB;AACvBa,IAAAA,WAAW,GAAG,iBAAd;AACH,GAFM,MAEA,IAAIJ,cAAJ,EAAoB;AACvBI,IAAAA,WAAW,GAAG,mBAAd;AACH,GAFM,MAEA;AACHA,IAAAA,WAAW,GAAG,aAAd;AACH;;AAED,SACIhB,KAAK,CAACQ,MAAN,CAAaR,KAAK,CAACS,MAAnB,IACK;AAAI,IAAA,GAAG,EAAE,QAAOT,KAAK,CAACM,IAAtB;AACG,IAAA,EAAE,YAAKN,KAAK,CAACQ,MAAN,CAAaR,KAAK,CAACS,MAAnB,CAAL,cAAmCT,KAAK,CAACU,KAAzC,CADL;AAEG,IAAA,SAAS,EAAEM,WAFd;AAGG,oBAAcb,cAAc,aAAMA,cAAN,2BAA4C,IAH3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKIH,KAAK,CAACQ,MAAN,CAAaR,KAAK,CAACS,MAAnB,CALJ,CADL,GAOc;AAAI,IAAA,GAAG,EAAE,QAAOT,KAAK,CAACM,IAAtB;AAA4B,IAAA,SAAS,EAAC,mBAAtC;AAA0D,IAAA,EAAE,EAAC,GAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARlB;AAUH,CArCD;;AAuCAP,WAAW,CAACkB,SAAZ,GAAwB;AACpBT,EAAAA,MAAM,EAAEV,SAAS,CAACoB,KAAV,CAAgBC,UADJ;AAEpBT,EAAAA,KAAK,EAAEZ,SAAS,CAACsB,MAAV,CAAiBD,UAFJ;AAGpBE,EAAAA,OAAO,EAAEvB,SAAS,CAACwB,IAAV,CAAeH,UAHJ;AAIpBf,EAAAA,QAAQ,EAAEN,SAAS,CAACoB,KAAV,CAAgBC,UAJN;AAKpBR,EAAAA,IAAI,EAAEb,SAAS,CAACW,MAAV,CAAiBU,UALH;AAMpBN,EAAAA,SAAS,EAAEf,SAAS,CAACyB,MAAV,CAAiBJ;AANR,CAAxB;AASApB,WAAW,CAACyB,YAAZ,GAA2B,EAA3B;AAIA,SAAQzB,WAAR","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\n\nconst CreatOneDay = (props) => {\n\nconsole.log('props',props );\n\n               let isThereAnEvent = 0;\n    props.allEvent.map((item) => {\n        if ((item.monthAndDate === `${props.newArr[props.number]} ${props.month}`) && props.year === item.year) {\n            return isThereAnEvent += 1;\n        }\n    });\n    let isThisDayToday = false;\n    if ((props.todayDate.year === props.year) &&\n        (props.todayDate.monthName === props.month) &&\n        (props.todayDate.today === props.newArr[props.number])) {\n        isThisDayToday = true;\n    }\n    let classNameTd = '';\n    if (isThisDayToday === true && isThereAnEvent > 0) {\n        classNameTd = 'tdStyleYear red today'\n    } else if (isThereAnEvent) {\n        classNameTd = 'tdStyleYear red'\n    } else if (isThisDayToday) {\n        classNameTd = 'tdStyleYear today'\n    } else {\n        classNameTd = 'tdStyleYear'\n    }\n\n    return (\n        props.newArr[props.number] ?\n            (<td key={'key'+ props.item}\n                id={`${props.newArr[props.number]} ${props.month}`}\n                className={classNameTd}\n                data-tooltip={isThereAnEvent ? `${isThereAnEvent} events in this day` : null}\n            >\n                {props.newArr[props.number]}\n            </td>) : (<td key={'key'+ props.item} className=\"tdStyle invisible\" id=\"0\"/>)\n    )\n};\n\nCreatOneDay.propTypes = {\n    newArr: PropTypes.array.isRequired,\n    month: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n    allEvent: PropTypes.array.isRequired,\n    year: PropTypes.number.isRequired,\n    todayDate: PropTypes.object.isRequired,\n};\n\nCreatOneDay.defaultProps = {};\n\n\n\nexport {CreatOneDay};"]},"metadata":{},"sourceType":"module"}