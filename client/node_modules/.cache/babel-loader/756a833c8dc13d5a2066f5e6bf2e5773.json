{"ast":null,"code":"import * as Constants from \"../../constants\";\n\nfunction rename(obj) {\n  let newNameObj = {};\n  let allName = Object.keys(obj);\n  console.log(allName);\n\n  for (let i = 0; i < Object.keys(obj).length; i++) {\n    let name = allName[i];\n    newNameObj[Constants.KEYSMAP[name]] = obj[allName[i]];\n  }\n\n  return newNameObj;\n}\n\nexport default function renameKeys(obj, reverse) {\n  if (reverse) {\n    return rename(obj);\n  } else {\n    let newArrAllEvents = [];\n\n    for (let i = 0; i < Object.keys(obj).length; i++) {\n      newArrAllEvents.push(rename(obj[i]));\n    }\n\n    return newArrAllEvents;\n  }\n}\n;","map":{"version":3,"sources":["/home/user/work/project/calendarReact/client/src/components/auxiliary/renameKeys.js"],"names":["Constants","rename","obj","newNameObj","allName","Object","keys","console","log","i","length","name","KEYSMAP","renameKeys","reverse","newArrAllEvents","push"],"mappings":"AAAA,OAAO,KAAKA,SAAZ,MAA2B,iBAA3B;;AAEA,SAASC,MAAT,CAAgBC,GAAhB,EAAqB;AACjB,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYJ,GAAZ,CAAd;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;;AACA,OAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAAM,CAACC,IAAP,CAAYJ,GAAZ,EAAiBQ,MAArC,EAA6CD,CAAC,EAA9C,EAAkD;AAC9C,QAAIE,IAAI,GAAGP,OAAO,CAACK,CAAD,CAAlB;AACAN,IAAAA,UAAU,CAACH,SAAS,CAACY,OAAV,CAAkBD,IAAlB,CAAD,CAAV,GAAsCT,GAAG,CAACE,OAAO,CAACK,CAAD,CAAR,CAAzC;AACH;;AACD,SAAON,UAAP;AACH;;AAED,eAAe,SAASU,UAAT,CAAqBX,GAArB,EAA0BY,OAA1B,EAAmC;AAClD,MAAIA,OAAJ,EAAY;AACR,WAAOb,MAAM,CAACC,GAAD,CAAb;AACH,GAFD,MAEM;AACF,QAAIa,eAAe,GAAG,EAAtB;;AACA,SAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAAM,CAACC,IAAP,CAAYJ,GAAZ,EAAiBQ,MAArC,EAA6CD,CAAC,EAA9C,EAAkD;AAC9CM,MAAAA,eAAe,CAACC,IAAhB,CAAqBf,MAAM,CAACC,GAAG,CAACO,CAAD,CAAJ,CAA3B;AACH;;AACD,WAAOM,eAAP;AACH;AAEA;AAAA","sourcesContent":["import * as Constants from \"../../constants\";\n\nfunction rename(obj) {\n    let newNameObj = {};\n    let allName = Object.keys(obj);\n    console.log(allName);\n    for (let i = 0; i < Object.keys(obj).length; i++) {\n        let name = allName[i];\n        newNameObj[Constants.KEYSMAP[name]] = obj[allName[i]];\n    }\n    return newNameObj\n}\n\nexport default function renameKeys (obj, reverse) {\nif (reverse){\n    return rename(obj);\n}else {\n    let newArrAllEvents = [];\n    for (let i = 0; i < Object.keys(obj).length; i++) {\n        newArrAllEvents.push(rename(obj[i]));\n    }\n    return newArrAllEvents\n}\n\n};\n\n"]},"metadata":{},"sourceType":"module"}