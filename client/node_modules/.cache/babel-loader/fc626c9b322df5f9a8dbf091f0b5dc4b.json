{"ast":null,"code":"var _jsxFileName = \"/home/user/work/project/calendarReact/client/src/components/createNewView/month/event/Modal/outlineListOfEventsForTheSelectedDate.js\";\nimport React from 'react';\nimport { OneEventOnList } from './oneEventOnList';\nimport { Modal } from \"./index\";\n\nfunction searchesForEventsOnSelectedDate(year, day, allEvent) {\n  return allEvent.filter(function (date) {\n    return date.year === year && date.monthAndDate === day;\n  });\n}\n\nconst OutlineListOfEventsForTheSelectedDate = props => {\n  if (props.forWhat === 'modalWindow') {\n    let arrEventsOnSelectedDate = searchesForEventsOnSelectedDate(props.year, props.activeDate, props.allEvent);\n    arrEventsOnSelectedDate.sort((a, b) => a.from > b.from ? 1 : b.from > a.from ? -1 : 0);\n\n    if (arrEventsOnSelectedDate) {\n      console.log('@@@@@ arrEventsOnSelectedDate', arrEventsOnSelectedDate);\n      let arr = arrEventsOnSelectedDate.map(item => {\n        return React.createElement(OneEventOnList, {\n          item: item,\n          forWhat: props.forWhat,\n          newValueInput: props.newValueInput,\n          arrEventsOnSelectedDate: arrEventsOnSelectedDate,\n          deleteEvent: props.deleteEvent,\n          showModalEditEvent: props.showModalEditEvent,\n          afterEditEvent: props.afterEditEvent,\n          editEvent: props.editEvent,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        className: \"modalInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        id: \"event_list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal_Description_event_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Events list on \", props.activeDate, \" \"), React.createElement(\"div\", {\n        className: \"modal_Description_event_header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal_Description_time_event\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"From\"), React.createElement(\"div\", {\n        className: \"modal_Description_time_event\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"To\"), React.createElement(\"div\", {\n        className: \"modal_Description_event\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Title event\"), React.createElement(\"div\", {\n        className: \"modal_Description_event\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Description event\")), arr));\n    } else {\n      return [];\n    }\n  } else if (props.forWhat === 'day') {\n    let arrEventsOnSelectedDate = searchesForEventsOnSelectedDate(props.year, props.day, props.allEvent);\n    arrEventsOnSelectedDate.sort((a, b) => a.from > b.from ? 1 : b.from > a.from ? -1 : 0);\n\n    if (arrEventsOnSelectedDate) {\n      if (arrEventsOnSelectedDate.length > 3) {\n        arrEventsOnSelectedDate.splice(3);\n        let test = arrEventsOnSelectedDate.map(item => {\n          return React.createElement(OneEventOnList, {\n            item: item,\n            forWhat: props.forWhat,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          });\n        });\n        test.push(React.createElement(\"p\", {\n          id: props.day,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \"for view more, click this day\"));\n        return test;\n      } else {\n        return arrEventsOnSelectedDate.map(item => {\n          return React.createElement(OneEventOnList, {\n            item: item,\n            forWhat: props.forWhat,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          });\n        });\n      }\n    } else {\n      return [];\n    }\n  }\n};\n\nexport { OutlineListOfEventsForTheSelectedDate };","map":{"version":3,"sources":["/home/user/work/project/calendarReact/client/src/components/createNewView/month/event/Modal/outlineListOfEventsForTheSelectedDate.js"],"names":["React","OneEventOnList","Modal","searchesForEventsOnSelectedDate","year","day","allEvent","filter","date","monthAndDate","OutlineListOfEventsForTheSelectedDate","props","forWhat","arrEventsOnSelectedDate","activeDate","sort","a","b","from","console","log","arr","map","item","newValueInput","deleteEvent","showModalEditEvent","afterEditEvent","editEvent","length","splice","test","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {OneEventOnList} from './oneEventOnList'\nimport {Modal} from \"./index\";\n\nfunction searchesForEventsOnSelectedDate(year, day, allEvent) {\n    return allEvent.filter(function (date) {\n        return date.year === year && date.monthAndDate === day;\n    });\n}\n\nconst OutlineListOfEventsForTheSelectedDate = (props) => {\n    if (props.forWhat === 'modalWindow') {\n        let arrEventsOnSelectedDate = searchesForEventsOnSelectedDate(props.year, props.activeDate, props.allEvent);\n        arrEventsOnSelectedDate.sort((a, b) => (a.from > b.from) ? 1 : ((b.from > a.from) ? -1 : 0));\n        if (arrEventsOnSelectedDate) {\n\n            console.log('@@@@@ arrEventsOnSelectedDate', arrEventsOnSelectedDate);\n            \n            let arr = arrEventsOnSelectedDate.map((item) => {\n                return <OneEventOnList item={item}\n                                       forWhat={props.forWhat}\n                                       newValueInput={props.newValueInput}\n                                       arrEventsOnSelectedDate={arrEventsOnSelectedDate}\n                                       deleteEvent = {props.deleteEvent}\n                                       showModalEditEvent={props.showModalEditEvent}\n                                       afterEditEvent={props.afterEditEvent}\n                                       editEvent={props.editEvent}\n                />;\n            });\n\n            \n\n            return (\n                <div className='modalInput'>\n                    <ul id='event_list'>\n                        <div className='modal_Description_event_title'>Events list on {props.activeDate} </div>\n                        <div className='modal_Description_event_header'>\n                            <div className='modal_Description_time_event'>From</div>\n                            <div className='modal_Description_time_event'>To</div>\n                            <div className='modal_Description_event'>Title event</div>\n                            <div className='modal_Description_event'>Description event</div>\n                        </div>\n                        {arr}\n                    </ul>\n                </div>\n            );\n        } else {\n            return [];\n        }\n    } else if (props.forWhat === 'day') {\n        let arrEventsOnSelectedDate = searchesForEventsOnSelectedDate(props.year, props.day, props.allEvent);\n        arrEventsOnSelectedDate.sort((a, b) => (a.from > b.from) ? 1 : ((b.from > a.from) ? -1 : 0));\n        if (arrEventsOnSelectedDate) {\n            if (arrEventsOnSelectedDate.length > 3) {\n                arrEventsOnSelectedDate.splice(3);\n                let test = arrEventsOnSelectedDate.map((item) => {\n                    return <OneEventOnList item={item} forWhat={props.forWhat}/>;\n                });\n                test.push(<p id={props.day}>for view more, click this day</p>)\n                return test;\n            } else {\n                return arrEventsOnSelectedDate.map((item) => {\n                    return <OneEventOnList item={item} forWhat={props.forWhat}/>;\n                });\n            }\n        } else {\n            return [];\n        }\n    }\n};\n\n\nexport {OutlineListOfEventsForTheSelectedDate};"]},"metadata":{},"sourceType":"module"}